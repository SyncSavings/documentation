info:
  title: Savers

paths:
  /savers:
    post:
      summary: Create a new Saver
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSaverRequestBody'
      responses:
        '201':
          description: The Saver has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaverResponseBody'
        '400':
          description: The data provided in the request body is incomplete or invalid. Refer to the returned validation errors for more details
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/ValidationErrorResponse'
      tags:
        - Savers
  /savers/{saverId}:
    summary: ''
    parameters:
      - name: saverId
        description: The ID of the Saver
        example: 668286d72ea20e3725f813eb
        in: path
        required: true
        schema:
          type: string
    get:
      summary: View an existing Saver
      responses:
        '200':
          description: The requested Saver has been found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaverResponseBody'
          '404':
            description: The Saver with the specified ID does not exist
      tags:
        - Savers
    patch:
      summary: Update an existing Saver
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaverUpdateBody'
      responses:
        '200':
          description: Successfully updated the Saver
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaverResponseBody'
        '404':
          description: The Saver with the specified ID does not exist
      tags:
        - Savers
    delete:
      summary: Delete an existing Saver
      description: This will only work if the Saver is in an active state and will close the Saver's Account
      responses:
        '204':
          description: Successfully deleted the Saver
        '404':
          description: The Saver with the specified ID does not exist
        '400':
          description: The Saver cannot be deleted because it is not in an active state'
      tags:
        - Savers

components:
  schemas:
    Saver:
      type: object
      properties:
        firstName:
          type: string
          example: Christopher
          description: The given name of the Saver.
        lastName:
          type: string
          example: Robin
          description: The family name of the Saver.
        email:
          type: string
          example: christopher.robin@sync-savings.com
          description: The email address of the Saver.
        dateOfBirth:
          type: string
          format: date
          example: '1969-12-31'
          description: The date of birth of the Saver in ISO 8601 format.
        mobileNumber:
          type: string
          pattern: /\+447\d{9}/
          example: '+447123456789'
          description: The mobile phone number of the Saver.
        address:
          type: object
          allOf:
            - $ref: '#/components/schemas/Address'
        sourceAccountDetails:
          type: object
          allOf:
            - $ref: '#/components/schemas/SaverBankDetails'
        withdrawalAccountDetails:
          type: object
          description: This bank account is where Withdrawal Transactions will be paid to and is prioritised over `sourceAccountDetails`
          allOf:
            - $ref: '#/components/schemas/SaverBankDetails'
        institution:
          type: string
          example: 'Winslow Luggages'
          description: If you aggregate data and need to identity Savers by the source of that data `institution` can be used for this, e.g. this could be populated with the Saver's employer
        employment:
          type: object
          properties:
            industry:
              type: string
              enum: ['marketing-advertising-and-pr','sales','law','hospitality-and-events-management','personal-care-and-lifestyle','creative-arts-and-design','information-technology','environment-and-agriculture','media-and-internet','healthcare','property-and-construction','public-services-and-administration','law-enforcement-and-security','engineering-and-manufacturing','energy-and-utilities','recruitment-and-hr','teacher-training-and-education','leisure-sport-and-tourism','business-consulting-and-management','charity-and-not-for-profit-organizations','transport-and-logistics','science-and-pharmaceuticals','social-care','accountancy-banking-and-finance','retail-and-wholesale','social-and-humanities-scientists']
              description: The industry that the Saver works in
              example: 'marketing-advertising-and-pr'
            status:
              type: string
              enum: ['employed','retired','self-employed','unemployed']
              description: The employment status of the Saver
              example: 'employed'
            income:
              type: object
              properties:
                currency:
                  type: string
                  enum: ['GBP']
                  description: The currency of the Saver's income in ISO 4217 format
                value:
                  type: number
                  minimum: 0.01
                  multipleOf: 0.01
                  example: 54321.09
              required:
                - currency
                - value
          required:
            - industry
            - status
            - income
        sourceOfFunds:
            type: string
            enum: ['gambling-or-lottery','investments','property-or-asset-sale','business-income','savings','salary-or-bonus','student-loans-or-bursary','retirement-or-pension','legal-settlement','family-or-gifted','loan','inheritance']
            example: 'salary-or-bonus'
            description: The nature of the money being used to fund the Bank Account
        taxResidency:
          type: string
          enum: ['GB']
          description: The country where the Saver is a tax resident. Currently GB only
    Address:
      type: object
      properties:
        property:
          type: string
          example: '145'
          summary: A house number.
          description: How the Saver's residence is identified
        street:
          type: string
          example: London Street
          description: The street of the Saver's address
        city:
          type: string
          example: London
          description: The name of the city, town, etc.
        country:
          type: string
          example: GB
          description: 2-character country code in ISO 3166 format
        postCode:
          type: string
          example: EC3N 4AB
          description: Postal code for the area.

    AddressRequest:
      allOf:
        - $ref: '#/components/schemas/Address'
        - required:
          - property
          - street
          - city
          - country
          - postCode

    CreateSaverRequestBody:
      allOf:
        - $ref: '#/components/schemas/Saver'
        - type: object
          properties:
            address:
              $ref: '#/components/schemas/AddressRequest'
        - required:
          - firstName
          - lastName
          - email
          - dateOfBirth
          - mobileNumber
          - address
          - sourceAccountDetails
          - taxResidency
          - termsAgreed
          - summaryBoxViewed
          - fscsSheetViewed
          - employment
          - sourceOfFunds

    SaverResponseBody:
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: 668286d72ea20e3725f813eb
              description: The unique identifier of the Saver in Sync's system.
            status:
              type: string
              enum: ['active','pending','escalated', 'rejected']
              description: The current status of the Saver
              example: 'active'
        - $ref: '#/components/schemas/Saver'
        - $ref: 'schemas.yaml#/components/schemas/Dates'

    SaverUpdateBody:
      allOf:
        - $ref: '#/components/schemas/Saver'
    
    SaverBankDetails:
      type: object
      description: This bank account is where Withdrawal Transactions will be paid to
      properties:
        accountNumber:
          type: string
          example: '11223344'
          description: The bank account number of the Saver
        sortCode:
          type: string
          example: '608371'
          description: The sort code of the Saver's bank account
        accountOwner:
          type: string
          example: Christopher Robin
          description: The name on the Saver's bank account
      required:
        - accountNumber
        - sortCode
        - accountOwner
      
